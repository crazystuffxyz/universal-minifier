const e=require("fs/promises"),a=require("path"),r=require("os"),s=require("crypto"),t=require("readline"),i=require("stream"),o=require("image-size"),n=require("jpeg-js"),c=require("pngjs").PNG,l=require("webp-converter"),d=require("gif-encoder"),{Buffer:p}=require("node:buffer"),u=require("yargs/yargs"),{hideBin:m}=require("yargs/helpers"),g=require("chalk"),f=require("cli-progress"),y=require("archiver"),h=require("terser"),w=require("typescript"),b=require("csso"),k=require("sass"),v=require("less"),q=require("stylus"),{minify:S}=require("html-minifier-terser"),{parse:x,print:j}=require("graphql"),$=require("yaml"),E=require("sql-minifier"),D=require("luamin"),z=require("php-parser"),C=require("strip-comments"),{GlslMinify:N}=require("webpack-glsl-minify"),{optimize:F}=require("svgo"),I=a.join(r.homedir(),".uniminify-backups"),P=["node_modules",".git",".DS_Store","package-lock.json","yarn.lock","pnpm-lock.yaml",a.basename(I)],T=new z({parser:{extractDoc:!1,suppressErrors:!0},lexer:{all_tokens:!0}}),O=N;async function R(e,r,s,t){if(t.optimizeMedia){const a=await async function(e,a){try{switch(a){case".jpeg":case".jpg":return async function(e){try{const a=n.decode(e),r=n.encode(a,{quality:80}),s=p.from(r.data);return s.length<e.length?s:e}catch(a){return console.error("Error optimizing JPEG:",a),e}}(e);case".png":return async function(e){return new Promise(a=>{try{(new c).parse(e,(r,s)=>{if(r)return console.error("Error parsing PNG:",r),a(e);const t=new c({width:s.width,height:s.height,colorType:s.colorType,inputHasAlpha:s.alpha,deflateLevel:9,deflateStrategy:3});t.data=p.from(s.data);const i=[];t.pack().on("data",e=>i.push(e)).on("end",()=>{const r=p.concat(i);a(r.length<e.length?r:e)}).on("error",r=>{console.error("Error encoding PNG:",r),a(e)})})}catch(r){console.error("Error optimizing PNG:",r),a(e)}})}(e);case".webp":return async function(e){return new Promise(a=>{l.buffer2webp(e,null,"-q 80").then(r=>{const s=p.from(r);a(s.length<e.length?s:e)}).catch(r=>{console.error("Error optimizing WebP:",r),a(e)})})}(e);case".gif":return async function(e){return new Promise(a=>{try{const r=o.imageSize(e),s=new d(r.width,r.height),t=new i.PassThrough,c=[];t.on("data",e=>c.push(e)),t.on("end",()=>{const r=p.concat(c);a(r.length<e.length?r:e)}),t.on("error",r=>{console.error("GIF Encoding Error:",r),a(e)}),s.pipe(t);const l=n.decode(e);s.addFrame(l.data),s.finish()}catch(r){console.error("Error optimizing GIF:",r),a(e)}})}(e);default:return e}}catch(a){return console.error("Error optimizing image:",a),e}}(e,r);if(a!==e)return a}try{const a=e.toString("utf8");let t;switch(r){case".js":case".mjs":case".cjs":case".ts":case".mts":case".cts":case".jsx":case".tsx":t=await async function(e,a){let r=e;if([".ts",".mts",".cts",".tsx",".jsx"].includes(a))try{r=w.transpileModule(e,{compilerOptions:{module:w.ModuleKind.ESNext,jsx:w.JsxEmit.Preserve,target:w.ScriptTarget.ES2020}}).outputText}catch(e){return null}try{return(await h.minify(r,{mangle:!0,compress:!0,ecma:2020,module:!0})).code||null}catch(e){return null}}(a,r);break;case".css":t=b.minify(a).css;break;case".scss":t=k.compileString(a,{style:"compressed"}).css;break;case".sass":t=k.compileString(a,{style:"compressed",syntax:"indented"}).css;break;case".less":t=(await v.render(a,{compress:!0})).css;break;case".styl":t=await new Promise((e,r)=>q(a).set("compress",!0).render((a,s)=>a?r(a):e(s)));break;case".html":case".htm":case".xhtml":t=await S(a,{removeComments:!0,collapseWhitespace:!0,minifyJS:!0,minifyCSS:!0,sortAttributes:!0,sortClassName:!0});break;case".svg":t=F(a,{path:s}).data;break;case".xml":case".xsd":case".xsl":case".xslt":case".qml":t=await S(a,{xmlMode:!0,collapseWhitespace:!0,removeComments:!0});break;case".json":t=JSON.stringify(JSON.parse(a));break;case".jsonc":t=JSON.stringify(JSON.parse(C(a)));break;case".jsonl":t=a.split(/\r?\n/).filter(e=>e.trim().length>0).map(e=>JSON.stringify(JSON.parse(e))).join("\n");break;case".yaml":case".yml":t=JSON.stringify($.parse(a));break;case".gql":case".graphql":t=j(x(a));break;case".sql":case".hql":case".plsql":case".tsql":case".cyp":case".cypher":t=E.minify(a);break;case".php":case".phtml":t=T.unparse(T.parseCode(a));break;case".lua":t=D.minify(a);break;case".glsl":case".vert":case".frag":case".geom":case".hlsl":case".fx":case".shader":t=(await O.execute(a)).sourceCode;break;case".c":case".h":case".cpp":case".cc":case".cxx":case".hpp":case".hh":case".cs":case".csx":case".java":case".go":case".rs":case".swift":case".kt":case".kts":case".d":case".m":case".mm":case".vala":case".scala":case".sc":case".groovy":case".gd":case".py":case".pyw":case".pyi":case".rb":case".rbw":case".pl":case".pm":case".sh":case".bash":case".zsh":case".fish":case".ps1":case".r":case".jl":case".sas":case".v":case".sv":case".svh":case".vhd":case".vhdl":case".el":case".lisp":case".lsp":case".cl":case".scm":case".ss":case".re":case".rei":t=C(a);break;case"dockerfile":case".dockerignore":case".conf":case".cfg":case".ini":case".toml":case".hcl":case".tf":case".tfvars":case".gitignore":case".gitattributes":case".pp":case".cr":case".nim":case".fth":case".tex":case".ltx":case".sty":case".cls":t=function(e){return e.split("\n").map(e=>e.replace(/#.*$|--.*$|%.*$/,"").trim()).filter(e=>e.length>0).join("\n")}(a);break;case".bf":case".b":t=a.replace(/[^><+\-.,[\]]/g,"");break;default:return e}if("string"!=typeof t)return e;const i=p.from(t,"utf8");return i.length<e.length?i:e}catch(r){return console.warn(g.yellow(`\nWarning: Could not minify ${a.basename(s)} (${r.message}). Skipping.`)),e}}async function B(r,s,t){const i=a.relative(s,r),o=a.join(I,t,i);await e.mkdir(a.dirname(o),{recursive:!0}),await e.copyFile(r,o)}async function J(){try{await e.mkdir(I,{recursive:!0});const r=await e.readdir(I);for(const s of r)try{const r=JSON.parse(await e.readFile(a.join(I,s,"meta.json"),"utf-8"));new Date(r.expires)<new Date&&await e.rm(a.join(I,s),{recursive:!0,force:!0})}catch(e){}}catch(e){}}async function M(){try{await e.mkdir(I,{recursive:!0});const r=await e.readdir(I),s=[];for(const t of r)try{const r=JSON.parse(await e.readFile(a.join(I,t,"meta.json"),"utf-8"));s.push(r)}catch(e){}return s.sort((e,a)=>new Date(a.timestamp)-new Date(e.timestamp))}catch(e){return[]}}async function G(){console.log(g.cyan.bold("Available Backups:")),console.log(g.gray(`Stored in: ${I}\n`));const e=await M();if(0===e.length)return void console.log("No backups found.");const a="ID".padEnd(70)+"Created".padEnd(28)+"Expires".padEnd(28)+"Original Path";console.log(g.underline(a)),e.forEach(e=>{const a=g.yellow(e.id.padEnd(70)),r=new Date(e.timestamp).toLocaleString().padEnd(28),s=new Date(e.expires).toLocaleString().padEnd(28);console.log(`${a}${r}${s}${g.gray(e.originalRoot)}`)})}async function A(e){return e?(await M()).find(a=>a.id.startsWith(e)):null}function L(e){const a=t.createInterface({input:process.stdin,output:process.stdout});return new Promise(r=>{a.question(e,e=>{a.close(),r("yes"===e.toLowerCase()||"y"===e.toLowerCase())})})}async function W(r){const s=await A(r.id);if(!s)return console.error(g.red(`Error: Backup ID starting with '${r.id}' not found.`));await L(g.red.bold(`\nPermanently delete backup ${s.id.substring(0,12)}? (yes/no): `))?(await e.rm(a.join(I,s.id),{recursive:!0,force:!0}),console.log(g.green("Successfully deleted backup."))):console.log(g.gray("Deletion cancelled."))}async function _(e){const r=await A(e.id);if(!r)return console.error(g.red(`Error: Backup ID starting with '${e.id}' not found.`));const s=`uniminify_backup_${r.id.substring(0,12)}.zip`,t=a.join(process.cwd(),s),i=require("fs").createWriteStream(t),o=y("zip",{zlib:{level:9}});o.pipe(i),o.directory(a.join(I,r.id),!1),await o.finalize(),console.log(g.green(`‚úÖ Backup exported successfully to: ${t}`))}u(m(process.argv)).command("$0 <path>","Minify a directory or file in-place with automatic backup.",e=>{e.positional("path",{describe:"Path to the directory or file to minify",type:"string"}).option("no-backup",{type:"boolean",description:"Skip creating a recovery backup."}).option("dry-run",{type:"boolean",description:"Simulate minification without writing any files."}).option("optimize-media",{type:"boolean",description:"Enable slower, intensive optimization for images (jpg, png, etc.)."})},async function(r){await J();const t=r.path,i=a.resolve(t);try{await e.access(i)}catch{console.error(g.red(`Error: Path not found at '${i}'`)),process.exit(1)}console.log(g.cyan(`üîé Starting Universal Minifier on: ${i}`)),r.optimizeMedia&&console.log(g.yellow("‚ö° Image optimization enabled. This may take longer."));const o=await e.stat(i),n=o.isDirectory()?await async function(r){const s=[],t=a.resolve(r);return await async function r(t){const i=await e.readdir(t,{withFileTypes:!0});for(const e of i){const i=a.join(t,e.name);P.some(e=>i.includes(e))||(e.isDirectory()?await r(i):s.push(i))}}(t),s}(i):[i];if(0===n.length)return void console.log(g.green("No files found to minify. All done!"));const c=!r.noBackup;let l;c&&(l=function(){const e=(new Date).toISOString(),a=s.randomBytes(16).toString("hex");return{id:s.createHash("sha256").update(e+a).digest("hex"),timestamp:e,salt:a}}(),await e.mkdir(a.join(I,l.id),{recursive:!0}),console.log(g.gray(`üõ°Ô∏è  Creating recovery point... (ID: ${l.id.substring(0,12)})`)));const d=new f.SingleBar({format:`Minifying | ${g.cyan("{bar}")} | {percentage}% || {value}/{total} Files || {filename}`,barCompleteChar:"‚ñà",barIncompleteChar:"‚ñë",hideCursor:!0});d.start(n.length,0,{filename:"Initializing..."});const p=[];let u=0,m=0;for(const s of n){const t=a.relative(process.cwd(),s);d.update({filename:t});const n=await e.readFile(s);if(u+=n.length,c){const e=o.isDirectory()?i:a.dirname(i);await B(s,e,l.id)}const g=a.basename(s).toLowerCase(),f=g.includes(".")?a.extname(g):g,y=await R(n,f,s,r);m+=y.length,r.dryRun||await e.writeFile(s,y),p.push({file:t,originalSize:n.length,minifiedSize:y.length}),d.increment()}if(d.stop(),c&&!r.dryRun){const r=o.isDirectory()?i:a.dirname(i);await async function(r,s,t,i,o){const n=new Date;n.setDate(n.getDate()+14);const c={id:r,timestamp:s,salt:t,expires:n.toISOString(),originalRoot:i,stats:o};await e.writeFile(a.join(I,r,"meta.json"),JSON.stringify(c,null,2))}(l.id,l.timestamp,l.salt,r,p)}console.log(g.green.bold("\n‚ú® Minification Complete! ‚ú®\n")),console.log(g.underline("File-by-File Results:")),p.forEach(({file:e,originalSize:a,minifiedSize:r})=>{const s=a-r,t=a>0?(s/a*100).toFixed(1):"0.0";s>0?console.log(`  - ${e}: ${g.green(`-${t}%`)} (${(s/1024).toFixed(2)} KB saved)`):console.log(`  - ${e}: ${g.gray("No change")}`)});const y=u-m,h=u>0?(y/u*100).toFixed(1):"0.0";console.log(g.cyan.bold("\n--- Summary ---")),console.log(`Total Files Processed: ${g.yellow(p.length)}`),console.log(`Total Bytes Saved:     ${g.green.bold(`${(y/1024).toFixed(2)} KB`)}`),console.log(`Average Reduction:     ${g.green.bold(`${h}%`)}`),r.dryRun?console.log(g.yellow.bold("\nNOTE: This was a dry run. No files were actually changed.")):c&&(console.log(`\n${g.bgCyan.black(" RECOVERY ")} A backup was created with ID: ${g.yellow(l.id)}`),console.log("           You can restore at any time (within 14 days) by running:"),console.log(g.whiteBright(`           uniminify restore ${l.id.substring(0,12)}`)))}).command("restore <id>","Restore files from a specific backup ID.",e=>{e.positional("id",{describe:"The full or partial backup ID to restore from.",type:"string"})},async function(r){const s=await A(r.id);if(!s)return console.error(g.red(`Error: Backup ID starting with '${r.id}' not found.`));if(console.log(g.yellow.bold("--- RESTORE ---")),console.log(`Backup ID:   ${s.id}`),console.log(`Target Path: ${s.originalRoot}`),!await L(g.red.bold("\nThis will overwrite files in the target path. Are you sure? (yes/no): ")))return console.log(g.gray("Restore cancelled."));console.log(g.cyan("Restoring files..."));const t=a.join(I,s.id);await async function r(i){const o=await e.readdir(i,{withFileTypes:!0});for(const n of o){if("meta.json"===n.name)continue;const o=a.join(i,n.name),c=a.relative(t,o),l=a.join(s.originalRoot,c);n.isDirectory()?(await e.mkdir(l,{recursive:!0}),await r(o)):await e.copyFile(o,l)}}(t),console.log(g.green.bold("\n‚úÖ Restore complete!"))}).command("backups","Manage recovery backups.",e=>{e.command("list","List all available backups",{},G).command("clean","Delete all expired backups automatically",{},async()=>{await J(),console.log(g.green("Expired backups cleaned."))}).command("delete <id>","Delete a specific backup",e=>e.positional("id",{describe:"The backup ID to delete",type:"string"}),W).command("export <id>","Export a backup to a zip file in the current directory",e=>e.positional("id",{describe:"The backup ID to export",type:"string"}),_).demandCommand(1,"You must provide a command for backups (list, clean, delete, export).")}).alias("h","help").alias("v","version").strict().demandCommand(1,"You need at least one command. Try --help.").parse();